##################################
#                                #
#            Variables           #
#                                #
##################################

$app_stage     = "<%= app_stage %>"
$app_domain    = "<%= app_domain %>"
$site_domain   = "<%= site_domain %>"
$app_deploy_to = "<%= app_deploy_to %>"
$app_theme     = "<%= app_theme %>"
$app_name      = "<%= app_name %>"
$app_user      = "<%= app_user %>"
$app_group     = "<%= app_group %>"

# random minute for cron
$random_minute = "<%= rand(60) %>"

<%
if app_stage == "dev"
  erb_path = "#{app_deploy_to}/current/config/puppet/templates"
else
  erb_path = "/home/deploy/tmp/#{app_name}/#{app_stage}/templates"
end

if File.basename(File.dirname(__FILE__)) == "config"
  modules_path = "./puppet/modules"
else
  modules_path = "./config/puppet/modules"
end

# allow us to include ERB fragments with the render statement
require "./config/erb-render.rb"

%>


##################################
#                                #
#          Defines               #
#                                #
##################################

<%= render "#{modules_path}/defines/cron-job.erb" , binding %>
<%= render "#{modules_path}/defines/mysql.erb", binding %>

<% if app_stage == "dev" %>
file { "/etc/resolv.conf":
	owner => root,
	group => root,
	mode => 644,
	source => "<%= app_deploy_to %>/current/config/puppet/files/vagrant_resolv.conf"
}
<% end %>


##################################
#                                #
#          Create groups         #
#                                #
##################################

group { "<%= app_user %>-homerw":
	ensure => present,
}

group { "<%= app_group %>":
	ensure => present,
}


##################################
#                                #
#          Create users          #
#                                #
##################################

user { "www-data":
	ensure => present,
	groups => ["<%= app_user %>-homerw"],
	membership => minimum,
}

<% app_access_users.each do |access_user| %>
user { "<%= access_user %>":
	ensure => present,
	groups => ["<%= app_user %>-homerw","<%= app_group %>"],
	membership => minimum,
}
<% end %>


##################################
#                                #
#     Create home directories    #
#                                #
##################################

<% if app_stage == "dev" %>
user { "vagrant":
	ensure => present,
	gid => "<%= app_user %>",
	groups => ["<%= app_user %>-homerw","<%= app_group %>"],
	membership => minimum,
}

file { "/home/<%= app_user %>":
	ensure => directory,
	owner => vagrant,
	group => vagrant-homerw,
	mode => 755,
}
<% else %>
user { "<%= app_user %>":
	ensure => present,
	gid => "<%= app_group %>",
	groups => ["www-php-loggers","<%= app_user %>-homerw"],
	membership => minimum,
	password => "*", # disable password-based logins entirely
}

file { "/home/<%= app_user %>":
	ensure => directory,
	owner => <%= app_user %>,
	group => <%= app_user %>-homerw,
	mode => 770,
}
<% end %>

file { "/home/<%= app_user %>/php/log/<%= app_name %>.slow.log":
	ensure => file,
	owner => <%= app_user %>,
	group => <%= app_group %>,
	require => Package["php5-fpm"]
}

file { "/home/<%= app_user %>/php/log/error.log":
	ensure => file,
	owner => <%= app_user %>,
	group => <%= app_group %>,
	require => Package["php5-fpm"]
}



# TODO -- split this out
file { "/home/<%= app_user %>/bin":
	ensure => directory,
	owner => <%= app_user %>,
	group => <%= app_group %>,
	mode => 775,
}

file { "/home/<%= app_user %>/bin/uploads_to_s3.py":
	ensure => file,
	owner => <%= app_user %>,
	group => <%= app_group %>,
	mode => 775, # keep it executable!
	source => "<%= app_deploy_to %>/current/config/puppet/files/uploads_to_s3.py",
}

<%= render "#{modules_path}/nginx/base.erb", binding %>
<%= render "#{modules_path}/nginx/uploads.erb", binding %>

<%= render "#{modules_path}/php5-fpm.erb", binding %>
<%= render "#{modules_path}/php-logging.erb", binding %>

<%= render "#{modules_path}/varnish.erb", binding %>

<%= render "#{modules_path}/mysql-db-setup.erb", binding %>

<%= render "#{modules_path}/s3-storage-cron.erb", binding %>
